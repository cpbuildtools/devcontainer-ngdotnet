name: Publish
on:
  push:
    branches:
      - "release/latest"
env:
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get package version
        id: package_version_str
        uses: martinbeentjes/npm-get-version-action@master

      - name: Check if tag exists for version '${{ steps.package_version_str.outputs.current-version }}'
        uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: "v${{ steps.package_version_str.outputs.current-version }}"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Exit if tag exists
        if: ${{ steps.checkTag.outputs.exists == 'true' }}
        run: exit 1

      - name: Parse package version
        id: version
        uses: doptools/action-parse-semver@main
        with:
          version: "${{ steps.package_version_str.outputs.current-version }}"
          versionRegex: "(.*)"

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key:  docker-layer-caching-Build-{hash}
          restore-keys: |
            docker-layer-caching-Build-

      - name: Build image
        run: docker-compose build

      - name: Create image id
        run: echo "IMAGE_ID=docker.pkg.github.com/${{github.repository}}/${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Add version tag
        run: |
          docker tag devcontainer-ngdotnet:build $IMAGE_ID:${{steps.version.outputs.full}}

      - name: Add latest tag
        if: ${{steps.version.outputs.major == 0 || steps.version.outputs.isPrerelease != true}}
        run: |
          docker tag devcontainer-ngdotnet:build $IMAGE_ID:latest

      - name: Log into registry
        run: echo "${{ github.token }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push version tag
        run: |
          docker push $IMAGE_ID:${{steps.version.outputs.full}}

      - name: Push latest tag
        if: ${{steps.version.outputs.major == 0 || steps.version.outputs.isPrerelease != true}}
        run: |
          docker push $IMAGE_ID:latest

      - name: Create tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ github.token }}
          custom_tag: ${{ steps.version.outputs.full }}

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: v${{ steps.version.outputs.full }}
          name: Version ${{ steps.version.outputs.full }}
          body: |
            Generated Release ${{ steps.version.outputs.full }}
          draft: false
          prerelease: ${{ steps.version.outputs.isPrerelease }}
